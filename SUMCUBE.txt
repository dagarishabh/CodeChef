#include<bits/stdc++.h>
using namespace std;
#define p 1000000007
long long ans=0,sum=0;
int k;
int a[100][100];
int d[100],f=0;
long long int power(long long int x,long long int y)
{
    long long int res = 1;
    x = x % p;  
    while (y > 0)
    {
        if (y & 1)
            res = (res*x) % p;
        y = y>>1; 
        x = (x*x) % p;  
    }
    return res%p;
}
void printPowerSet(long long int set[], int set_size)
{

    long long int pow_set_size = pow(2, set_size);
    int counter, j;
    for(counter = 0; counter < pow_set_size; counter++)
    {
    	long long int ans1=sum;
    	f=0;
      for(j = 0; j < set_size; j++)
       {
          if(counter & (1<<j))
          {
          	d[f++]=j+1;
          	ans1-=set[j];
          }  
       }
       if(f>=1)
       {
       	for(int g=0;g<f;g++)
       	for(int h=g+1;h<f;h++)
       	if(a[d[g]][d[h]]==1)
       	ans1++;
       }
       if(ans1<0)
       ans1=0;
       //cout<<endl;
       //cout<<"ans1=";
       //cout<<ans1<<endl;
       ans+=power(ans1,k);
       //cout<<ans<<endl;
       ans%=p;
       //printf("\n");
    }
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m>>k;
		if(k==1)
		{
			ans=m*power(2,n-2);
			int i,j;
			if(ans<0)
			ans+=p;
			while(m--)
			{
				cin>>i>>j;

			}
			cout<<ans%p<<endl;
		}
		else
		{
			int i,j,m1=m;
			long long int b[n];
			for(i=0;i<n;i++)
			{
				b[i]=0;
			}
			while(m--)
			{
				cin>>i>>j;
				b[i-1]++;
				b[j-1]++;
				a[i][j]=1;
				a[j][i]=1;
			}
		//	for(i=0;i<n;i++)
		//	cout<<b[i]<<" ";
		//	cout<<endl;
			sum=m1;
		//	cout<<sum<<endl;
			printPowerSet(b, n);
			cout<<ans%p<<endl;
			for(i=0;i<100;i++)
			for(j=0;j<100;j++)
			a[i][j]=0;
		}
		ans=0;
	}
}